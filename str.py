import streamlit as st
st.image("Mind_cloud.jpg")
st.header("Mind Cloud Basic Training Roadmap - 2025")

tab1 , tab2 , tab3 , tab4 = st.tabs(["Phase 1 :  Software","Phase 2 :  Hardware and Electronics","Phase 3 :  Microcontroller","Phase 4 :  AI and Computer vision"])

with tab1 :
    st.image("coding.jpg")
    st.subheader("[ 1 ] Git and GitHub")
    st.subheader("[ 2 ] Introduction to C++")
    st.subheader("[ 3 ] Introduction to python")
    st.subheader("[ 4 ] Object oriented programming ( oop )")
    
with tab2  :
    st.image("electronics_w.jpg")
    st.subheader("[ 1 ] Introduction to Electronics - 1 ")
    st.write("Resistor - Capacitor - Inductor - Diode - Transistor - optocoupler")
    st.subheader("[ 2 ] Introduction to Electronics - 2 ")
    st.write("Voltage Regulator - Mosfet - opamp ")
    st.subheader("[ 3 ] PCB Design basics ")
with tab3 :
    st.image("micro_Contro.jpg")
    st.subheader("[ 1 ] Microcontroller Hardware")
    st.subheader("[ 2 ] Microcontroller Software")
    st.subheader("[ 3 ] Connections protocols")
with tab4 :
    st.image("AI_IMAGE.jpg")
    st.markdown('<h3 style="background-color:#ADD8E6; color:black; padding:8px; border-radius:6px;">[ 1 ] Introduction to Machine Learning</h3>',unsafe_allow_html=True)
    st.markdown("#### `LogisticRegression`")
    st.write("- sigmoid function")
    st.write("- How Logistic Regression works")
    st.write("- Logistic Regression using sklearn")
    st.markdown("#### `RandomForest`")
    st.write("- DesisionTree")
    st.write("- RandomForest")
    st.write("- RandomForest using sklearn")
    st.markdown('<h5 style="background-color:#FFA500; color:black; padding:8px; border-radius:6px;">Tasks for this session</h5>',unsafe_allow_html=True)
    st.markdown("#### `Task - 1`")
    st.write("they will download dataset with link below and compare between LogisticRegression and RandomForest in Test Results")
    st.markdown("[Heart Failure prediction](https://www.kaggle.com/datasets/fedesoriano/heart-failure-prediction/data)")
    st.write("there will be bounce if use Features extraction or features selection or use third model")
    st.markdown("#### `Task - 2`")
    st.write("Make a report with 2/3 pages about F1-score, precision, recall, and the confusion matrix")
    #------------------------------------------------------------------------------------------------------------------------------------------------------------
    st.markdown('<h3 style="background-color:#ADD8E6; color:black; padding:8px; border-radius:6px;">[ 2 ] Introduction to Computer vision using OpenCV</h3>',unsafe_allow_html=True)
    st.markdown("#### `opencv basics`")
    st.write("- Install open-cv")
    st.write("- Read images and videos")
    st.write("- open camera")
    st.write("- Resize and Crop images")
    st.write("- Write on image")
    st.write("- draw line - circle - Rectangle on the image")
    st.markdown("#### `Color spaces systems`")
    st.write("- Color spaces systems ( HSV - Gray - BGR )")
    st.write("- Convert between color spaces")
    st.markdown('<h5 style="background-color:#FFA500; color:black; padding:8px; border-radius:6px;">Tasks for this session</h5>',unsafe_allow_html=True)
    st.markdown("#### `Task - 1`")
    st.write("they will try to make a program that detect color of center pixel in video and write the color name on the video frame")
    st.markdown("#### `Task - 2`")
    st.write("detect black objects using HSV color space only from image")
    #------------------------------------------------------------------------------------------------------------------------------------------------------------
    st.markdown('<h3 style="background-color:#ADD8E6; color:black; padding:8px; border-radius:6px;">[ 3 ] Image processing principles</h3>',unsafe_allow_html=True)
    st.markdown("#### `Edge detection`")
    st.write("- Sobel filter")
    st.write("- Canny edge detection")
    st.markdown("#### `Blur filter`")
    st.write("- Gaussian Blur")
    st.write("- median Blur")
    st.markdown("#### `Thersold types`")
    st.write("- simple Image Thresholding")
    st.write("- Adaptive Thresholding")
    st.markdown("#### `cv2.findContours()`")
    st.markdown('<h5 style="background-color:#FFA500; color:black; padding:8px; border-radius:6px;">Tasks for this session</h5>',unsafe_allow_html=True)
    st.markdown("#### `Task - 1`")
    st.write("write report with 2 pages about Bilateral Filter and how to use it in opencv")
    st.write("#### `Task - 2`")
    st.write("Document Scanner")
    st.write("- Take or use a photo of a paper/document on a table")
    st.write("- Convert to grayscale and apply Gaussian blur.")
    st.write("- Use Canny edge detector to find strong edges.")
    st.write("- Use cv2.findContours() to detect the largest 4-point contour (the document).")
    st.write("- Apply perspective transform to warp the document into top-down view.")
    st.write("- Apply Adaptive Thresholding to make it look like a clean scanned copy.")
    st.write("#### `Task - 3`")
    st.write("Fruit counting on tree using HSV + contour area filter")
